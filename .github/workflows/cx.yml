name: cx

on: push

env:
  AWS_REGION: us-east-1
  API_STAGE_NAME: "v0"
  ACCESS_LOG_RETENTION_DAYS: 7
  FUNC_MEMORY_SIZE: 128
  FUNC_TIMEOUT: 5
  FUNC_LOG_RETENTION_DAYS: 7
  PROFILE_TABLE_READ_SCALING_MIN_CAPACITY: 1
  PROFILE_TABLE_WRITE_SCALING_MIN_CAPACITY: 1

defaults:
  run:
    shell: "/bin/bash {0}"

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      CFN_TEMPLATES: "stack.yml\n.github/cd_setup.yml\n"
    steps:
      - name: clone the repo
        uses: actions/checkout@v2.3.1

      - uses: aws-actions/configure-aws-credentials@v1.4.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: validate all cloudformation templates
        run: |
          printf "${{ env.CFN_TEMPLATES }}" | while read template; do
            aws cloudformation validate-template \
              --template-body="file://$template"
          done

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      _stack_name: ${{ steps.configure_environment.outputs._stack_name }}
    steps:
      - name: clone the repo
        uses: actions/checkout@v2.3.1

      - name: map branch 2 test/prod
        run: |
          if [[ ${{ github.ref }} == *master ]]; then
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
          fi

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: configure the environment
        id: configure_environment
        run: |
          echo "STACK_NAME=chale-$ENVIRONMENT" >> $GITHUB_ENV
          echo "READ_PROFILE_HANDLER_NAME=chale-$ENVIRONMENT-readprofilehandler" >> $GITHUB_ENV
          echo "UPSERT_PROFILE_HANDLER_NAME=chale-$ENVIRONMENT-upsertprofilehandler" >> $GITHUB_ENV
          echo "DELETE_PROFILE_HANDLER_NAME=chale-$ENVIRONMENT-deleteprofilehandler" >> $GITHUB_ENV
          echo "PROFILE_TABLE_NAME=chale-$ENVIRONMENT-profiletable" >> $GITHUB_ENV
          echo "_stack_name=chale-$ENVIRONMENT" >> $GITHUB_ENV

      - name: deploy the core stack
        run: |
          aws cloudformation deploy \
            --template-file=./stack.yml \
            --stack-name=${{ env.STACK_NAME }} \
            --parameter-overrides \
              Environment=${{ env.ENVIRONMENT }} \
              ApiStageName=${{ env.API_STAGE_NAME }} \
              FunctionMemorySize=${{ env.FUNC_MEMORY_SIZE }} \
              FunctionTimeout=${{ env.FUNC_TIMEOUT}} \
              FunctionLogRetentionInDays=${{ env.FUNC_LOG_RETENTION_DAYS }} \
              AccessLogRetentionInDays=${{ env.ACCESS_LOG_RETENTION_DAYS }} \
              ReadProfileHandlerName=${{ env.READ_PROFILE_HANDLER_NAME }} \
              UpsertProfileHandlerName=${{ env.UPSERT_PROFILE_HANDLER_NAME }} \
              DeleteProfileHandlerName=${{ env.DELETE_PROFILE_HANDLER_NAME }} \
              ProfileTableName=${{ env.PROFILE_TABLE_NAME }} \
              ProfileTableReadScalingMinCapacity=${{ env.PROFILE_TABLE_READ_SCALING_MIN_CAPACITY }} \
              ProfileTableWriteScalingMinCapacity=${{ env.PROFILE_TABLE_WRITE_SCALING_MIN_CAPACITY }} \
            --capabilities=CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: deploy the read profile handler
        run: |
          code_size=$( \
            aws lambda get-function-configuration \
              --function-name=${{ env.READ_PROFILE_HANDLER_NAME }} \
              --query=CodeSize \
          )
          if ! git diff HEAD HEAD~1 -s --exit-code "./lambdas/profiles/read/*" || \
             (( $code_size < 419 ));
          then
            cd ./lambdas/profiles/read
            npm ci --only=prod
            cd ../../..
            npx @zeit/ncc@0.22.3 build \
              --external=aws-sdk \
              --out=./lambdas/profiles/bundles/read \
              ./lambdas/profiles/read/index.js
            zip -j /tmp/bundle.zip ./lambdas/profiles/bundles/read/index.js
            aws lambda update-function-code \
              --function-name=${{ env.READ_PROFILE_HANDLER_NAME }} \
              --publish \
              --zip-file=fileb:///tmp/bundle.zip
          fi


      - name: deploy the upsert profile handler
        run: |
          code_size=$( \
            aws lambda get-function-configuration \
              --function-name=${{ env.UPSERT_PROFILE_HANDLER_NAME }} \
              --query=CodeSize \
          )
          if ! git diff HEAD HEAD~1 -s --exit-code "./lambdas/profiles/upsert/*" || \
             (( $code_size < 419 ));
          then
            cd ./lambdas/profiles/upsert
            npm ci --only=prod
            cd ../../..
            npx @zeit/ncc@0.22.3 build \
              --external=aws-sdk \
              --out=./lambdas/profiles/bundles/upsert \
              ./lambdas/profiles/upsert/index.js
            zip -j /tmp/bundle.zip ./lambdas/profiles/bundles/upsert/index.js
            aws lambda update-function-code \
              --function-name=${{ env.UPSERT_PROFILE_HANDLER_NAME }} \
              --publish \
              --zip-file=fileb:///tmp/bundle.zip
          fi

      - name: deploy the delete profile handler
        run: |
          code_size=$( \
            aws lambda get-function-configuration \
              --function-name=${{ env.DELETE_PROFILE_HANDLER_NAME }} \
              --query=CodeSize \
          )
          if ! git diff HEAD HEAD~1 -s --exit-code "./lambdas/profiles/delete/*" || \
             (( $code_size < 419 ));
          then
            cd ./lambdas/profiles/delete
            npm ci --only=prod
            cd ../../..
            npx @zeit/ncc@0.22.3 build \
              --external=aws-sdk \
              --out=./lambdas/profiles/bundles/delete \
              ./lambdas/profiles/delete/index.js
            zip -j /tmp/bundle.zip ./lambdas/profiles/bundles/delete/index.js
            aws lambda update-function-code \
              --function-name=${{ env.DELETE_PROFILE_HANDLER_NAME }} \
              --publish \
              --zip-file=fileb:///tmp/bundle.zip
          fi

  test:
    runs-on: ubuntu-latest
    needs:
      - validate
      - deploy
    steps:
      - uses: actions/checkout@v2.3.1

      - uses: aws-actions/configure-aws-credentials@v1.4.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: fetch stack outputs
        run: |
          api_base_url="$( \
            aws cloudformation describe-stacks \
              --stack-name="${{ needs.deploy.outputs._stack_name }}" \
              --query="Stacks[0].Outputs[?OutputKey=='ApiBaseURL'].OutputValue" \
              --output=text \
          )"
          echo "_BASE_URL=$api_base_url" >> $GITHUB_ENV

      - name: api testing
        run: |
          printf "[DEBUG] api base url: %s\n" "$_BASE_URL"
          source ./test/api_test.sh
          test_profiles_upsert_204
#          test_profiles_upsert_400_no_body
#          test_profiles_upsert_415_no_content_type
#          test_profiles_upsert_415_unexpected_content_type
#          test_profiles_read_200
#          test_profiles_read_404
#          test_profiles_delete_204
