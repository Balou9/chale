AWSTemplateFormatVersion: 2010-09-09
Description: Chale Api Stack

Metadata:
  AWS::Cloudformation::Interface:
    Parametergroups:
      - Label:
          default: Meta
        Parameters:
          - Environment
      - Label:
          default: API
        Parameters:
          - ApiStageName
          - AccessLogRetentionInDays
          - FunctionMemorySize
          - FunctionTimeout
          - FunctionLogRetentionInDays
          - GetProfileHandlerName

Parameters:
  ApiStageName:
    Description: API stage name - integer version identifier
    AllowedPattern: "^v[0-9]+$"
    Type: String

  AccessLogRetentionInDays:
    Description: API access log retention in days
    Type: Number
    Default: 7

  Environment:
    Description: Environment name - test/prod
    AllowedPattern: "^(test|prod)$"
    Type: String

  FunctionMemorySize:
    Description: How many megabytes of ram to allocate for the lambda
    Type: Number
    Default: 128

  FunctionTimeout:
    Description: Lambda timeout in seconds
    Type: Number
    Default: 3

  GetProfileHandlerName:
    Description: Lambda function name for the 'get profile' handler
    AllowedPattern: "^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$"
    Type: String

  FunctionLogRetentionInDays:
    Description: Lambda log retention in days
    Type: Number
    Default: 7

Resources:

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${AWS::StackName}-restapi

  ProfileResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: profile
      RestApiId: !Ref RestApi

  CreateGetProfileMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        ContentHandling: CONVERT_TO_BINARY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetProfileHandlerArn}/invocations
          - GetProfileHandlerArn: !GetAtt GetProfileHandler.Arn
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "404"
        - StatusCode: "500"
        - StatusCode: "502"
      ResourceId: !Ref ProfileResource
      RestApiId: !Ref RestApi

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByLambda
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogCreation
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  GetProfileHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          exports.handler = function(event) {
            var responseBody = {
              "message": "chale"
            }
            return {
              "statusCode": 200,
              "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*"
                 },
              "body": JSON.stringify(responseBody),
            }
          }
      Runtime: nodejs12.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: !Ref FunctionMemorySize
      Timeout: !Ref FunctionTimeout

  GetProfileHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetProfileHandlerName}
      RetentionInDays: !Ref FunctionLogRetentionInDays

  GetProfileHandlerPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - RestApi
      - GetProfileHandler
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GetProfileHandler.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/${ApiStageName}/GET/profile

  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGatewayLoggingRole.Arn

  ApiGatewayLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByApiGateway
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - CreateGetProfileMethod
    Properties:
      RestApiId: !Ref RestApi

  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-api-${ApiStageName}
      RetentionInDays: !Ref AccessLogRetentionInDays

  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt AccessLogGroup.Arn
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
      DeploymentId: !Ref Deployment
      MethodSettings:
        - CachingEnabled: False
          DataTraceEnabled: True
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: True
          ResourcePath: "/*"
      RestApiId: !Ref RestApi
      StageName: !Ref ApiStageName
      TracingEnabled: False

Outputs:
  ApiBaseURL:
    Description: "API Base URL"
    Value: !Sub https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}
