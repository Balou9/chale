AWSTemplateFormatVersion: 2010-09-09
Description: tcjam stack

Metadata:
  AWS::Cloudformation::Interface:
    Parametergroups:
      - Label:
          default: Meta
        Parameters:
          - Environment
      - Label:
          default: API
        Parameters:
          - AccessLogRetentionInDays
          - FunctionMemorySize
          - FunctionTimeout
          - FunctionLogRetentionInDays
          - ReadProfileHandlerName
          - UpsertProfileHandlerName
          - DeleteProfileHandlerName
      - Label:
          default: Storage
        Parameters:
          - PublicBucketName

Parameters:
  AccessLogRetentionInDays:
    Description: API access log retention in days
    Type: Number
    Default: 7

  Environment:
    Description: Environment name - test/prod
    AllowedPattern: "^(test|prod)$"
    Type: String

  FunctionLogRetentionInDays:
    Description: Lambda log retention in days
    Type: Number
    Default: 7

  FunctionMemorySize:
    Description: How many megabytes of ram to allocate for the lambda
    Type: Number
    Default: 128

  FunctionTimeout:
    Description: Lambda timeout in seconds
    Type: Number
    Default: 3

  ReadProfileHandlerName:
    Description: Lambda function name for the 'get profile' handler
    AllowedPattern: "^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$"
    Type: String

  UpsertProfileHandlerName:
    Description: Lambda function name for the 'upsert profile' handler
    AllowedPattern: "^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$"
    Type: String

  DeleteProfileHandlerName:
    Description: Lambda function name for the 'delete profile' handler
    AllowedPattern: "^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$"
    Type: String

  PublicBucketName:
    Description: Name of the S3 bucket hosting public content
    AllowedPattern: "^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$"
    Type: String

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Ref PublicBucketName
      BucketName: !Ref PublicBucketName

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowReadProfileHandlerGetObject
            Effect: Allow
            Principal:
              AWS: !GetAtt ReadProfileHandlerExecutionRole.Arn
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${Bucket}/*

          - Sid: AllowReadProfileHandlerListObject
            Effect: Allow
            Principal:
              AWS: !GetAtt ReadProfileHandlerExecutionRole.Arn
            Action: s3:ListBucket
            Resource: !Sub arn:aws:s3:::${Bucket}

          - Sid: AllowUpsertProfileHandlerPutObject
            Effect: Allow
            Principal:
              AWS: !GetAtt UpsertProfileHandlerExecutionRole.Arn
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${Bucket}/*

          - Sid: AllowDeleteProfileHandlerDeleteObject
            Effect: Allow
            Principal:
              AWS: !GetAtt DeleteProfileHandlerExecutionRole.Arn
            Action: s3:DeleteObject
            Resource: !Sub arn:aws:s3:::${Bucket}/*

  ReadProfileHandlerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Sub ${ReadProfileHandlerName}-executionrole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByLambda
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ReadProfileHandlerExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogCreation
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

              - Sid: AllowS3GetObject
                Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:aws:s3:::{Bucket}/*

              - Sid: AllowS3ListBucket
                Effect: Allow
                Action: s3:ListBucket
                Resource: !Sub arn:aws:s3:::{Bucket}

  UpsertProfileHandlerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Sub ${UpsertProfileHandlerName}-executionrole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByLambda
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: UpsertProfileHandlerExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogCreation
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

              - Sid: AllowS3PutObject
                Effect: Allow
                Action: s3:PutObject
                Resource: !Sub arn:aws:s3:::{Bucket}/*


  DeleteProfileHandlerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Sub ${DeleteProfileHandlerName}-executionrole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByLambda
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DeleteProfileHandlerExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogCreation
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

              - Sid: AllowS3DeleteObject
                Effect: Allow
                Action: s3:DeleteObject
                Resource: !Sub arn:aws:s3:::{Bucket}/*

  ReadProfileHandler:
    Type: AWS::Lambda::Function
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Ref ReadProfileHandlerName
      Code:
        ZipFile: // dummy
      FunctionName: !Ref ReadProfileHandlerName
      Environment:
        Variables:
          BUCKET_NAME: !Ref Bucket
      Runtime: nodejs12.x
      Handler: index.handler
      Role: !GetAtt ReadProfileHandlerExecutionRole.Arn
      MemorySize: !Ref FunctionMemorySize
      Timeout: !Ref FunctionTimeout

  UpsertProfileHandler:
    Type: AWS::Lambda::Function
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Ref UpsertProfileHandlerName
      Code:
        ZipFile: // dummy
      FunctionName: !Ref UpsertProfileHandlerName
      Environment:
        Variables:
          BUCKET_NAME: !Ref Bucket
      Runtime: nodejs12.x
      Handler: index.handler
      Role: !GetAtt UpsertProfileHandlerExecutionRole.Arn
      MemorySize: !Ref FunctionMemorySize
      Timeout: !Ref FunctionTimeout

  DeleteProfileHandler:
    Type: AWS::Lambda::Function
    Properties:
      Tags:
        - Key: "tcjam:name"
          Value: !Ref DeleteProfileHandlerName
      Code:
        ZipFile: // dummy
      FunctionName: !Ref DeleteProfileHandlerName
      Environment:
        Variables:
          BUCKET_NAME: !Ref Bucket
      Runtime: nodejs12.x
      Handler: index.handler
      Role: !GetAtt DeleteProfileHandlerExecutionRole.Arn
      MemorySize: !Ref FunctionMemorySize
      Timeout: !Ref FunctionTimeout

  ReadProfileHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ReadProfileHandlerName}
      RetentionInDays: !Ref FunctionLogRetentionInDays

  UpsertProfileHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpsertProfileHandlerName}
      RetentionInDays: !Ref FunctionLogRetentionInDays

  DeleteProfileHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DeleteProfileHandlerName}
      RetentionInDays: !Ref FunctionLogRetentionInDays

  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-api-${ApiStageName}
      RetentionInDays: !Ref AccessLogRetentionInDays
